{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lakir\\\\Desktop\\\\lastTry\\\\frontend\\\\src\\\\components\\\\Context.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, createContext, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nconst API_URL = \"https://673876654eb22e24fca800c5.mockapi.io\";\nconst Context = props => {\n  _s();\n  const [items, setItems] = useState([]); // Список всех товаров\n  const [cartItems, setCartItems] = useState([]); // Товары в корзине\n  const [loading, setLoading] = useState(true); // Состояние загрузки\n  const [error, setError] = useState(null); // Ошибки\n\n  // Преобразуем цену в число для корректной обработки\n  const processedItems = cartItems.map(item => ({\n    ...item,\n    price: Number(item.price)\n  }));\n\n  // Загрузка данных из API\n  const fetchData = useCallback(async () => {\n    try {\n      const [itemsResponse, cartResponse] = await Promise.all([axios.get(`${API_URL}/items`), axios.get(`${API_URL}/cart`)]);\n      setItems(itemsResponse.data);\n      setCartItems(cartResponse.data);\n    } catch (err) {\n      setError(\"Ошибка при загрузке данных!\");\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  // 1. CREATE - Добавить новый продукт\n  const addProduct = async newProduct => {\n    try {\n      const {\n        data\n      } = await axios.post(`${API_URL}/items`, newProduct);\n      setItems(prev => [...prev, data]);\n    } catch (error) {\n      console.error(\"Ошибка при добавлении продукта:\", error);\n    }\n  };\n\n  // 2. UPDATE - Обновить существующий продукт\n  const updateProduct = async (id, updatedData) => {\n    try {\n      const {\n        data\n      } = await axios.put(`${API_URL}/items/${id}`, updatedData);\n      setItems(prev => prev.map(item => item.id === id ? {\n        ...item,\n        ...data\n      } : item));\n    } catch (error) {\n      console.error(\"Ошибка при обновлении продукта:\", error);\n    }\n  };\n\n  // 3. DELETE - Удалить продукт\n  const deleteProduct = async id => {\n    try {\n      await axios.delete(`${API_URL}/items/${id}`);\n      setItems(prev => prev.filter(item => item.id !== id));\n    } catch (error) {\n      console.error(\"Ошибка при удалении продукта:\", error);\n    }\n  };\n\n  // Добавление в корзину (UPDATE или CREATE для корзины)\n  const onAddToCart = useCallback(async item => {\n    try {\n      const existingItem = cartItems.find(cartItem => cartItem.title === item.title);\n      if (existingItem) {\n        const updatedItem = {\n          ...existingItem,\n          quantity: existingItem.quantity + 1\n        };\n        await axios.put(`${API_URL}/cart/${existingItem.id}`, updatedItem);\n        setCartItems(prevItems => prevItems.map(el => el.id === existingItem.id ? updatedItem : el));\n      } else {\n        const newItem = {\n          ...item,\n          quantity: 1\n        };\n        const {\n          data\n        } = await axios.post(`${API_URL}/cart`, newItem);\n        setCartItems(prevItems => [...prevItems, data]);\n      }\n    } catch (error) {\n      console.error(\"Ошибка при добавлении товара в корзину:\", error);\n    }\n  }, [cartItems]);\n\n  // Удаление из корзины\n  const onRemoveItem = useCallback(async id => {\n    try {\n      await axios.delete(`${API_URL}/cart/${id}`);\n      setCartItems(prevItems => prevItems.filter(item => item.id !== id));\n    } catch (error) {\n      console.error(\"Ошибка при удалении из корзины:\", error);\n    }\n  }, []);\n\n  // Проверка, находится ли товар в корзине\n  const isItemInCart = title => cartItems.some(cartItem => cartItem.title === title);\n  const value = {\n    items,\n    setItems,\n    addProduct,\n    updateProduct,\n    deleteProduct,\n    cartItems,\n    onAddToCart,\n    onRemoveItem,\n    isItemInCart,\n    loading,\n    error\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n};\n_s(Context, \"NVkV94K1mejje7hEKjSKFQn6/Ak=\");\n_c = Context;\nexport default Context;\nvar _c;\n$RefreshReg$(_c, \"Context\");","map":{"version":3,"names":["React","useState","createContext","useEffect","useCallback","axios","jsxDEV","_jsxDEV","CartContext","API_URL","Context","props","_s","items","setItems","cartItems","setCartItems","loading","setLoading","error","setError","processedItems","map","item","price","Number","fetchData","itemsResponse","cartResponse","Promise","all","get","data","err","addProduct","newProduct","post","prev","console","updateProduct","id","updatedData","put","deleteProduct","delete","filter","onAddToCart","existingItem","find","cartItem","title","updatedItem","quantity","prevItems","el","newItem","onRemoveItem","isItemInCart","some","value","Provider","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lakir/Desktop/lastTry/frontend/src/components/Context.jsx"],"sourcesContent":["import React, { useState, createContext, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const CartContext = createContext();\r\n\r\nconst API_URL = \"https://673876654eb22e24fca800c5.mockapi.io\";\r\n\r\nconst Context = (props) => {\r\n  const [items, setItems] = useState([]); // Список всех товаров\r\n  const [cartItems, setCartItems] = useState([]); // Товары в корзине\r\n  const [loading, setLoading] = useState(true); // Состояние загрузки\r\n  const [error, setError] = useState(null); // Ошибки\r\n\r\n  // Преобразуем цену в число для корректной обработки\r\n  const processedItems = cartItems.map((item) => ({\r\n    ...item,\r\n    price: Number(item.price),\r\n  }));\r\n\r\n  // Загрузка данных из API\r\n  const fetchData = useCallback(async () => {\r\n    try {\r\n      const [itemsResponse, cartResponse] = await Promise.all([\r\n        axios.get(`${API_URL}/items`),\r\n        axios.get(`${API_URL}/cart`),\r\n      ]);\r\n\r\n      setItems(itemsResponse.data);\r\n      setCartItems(cartResponse.data);\r\n    } catch (err) {\r\n      setError(\"Ошибка при загрузке данных!\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  // 1. CREATE - Добавить новый продукт\r\n  const addProduct = async (newProduct) => {\r\n    try {\r\n      const { data } = await axios.post(`${API_URL}/items`, newProduct);\r\n      setItems((prev) => [...prev, data]);\r\n    } catch (error) {\r\n      console.error(\"Ошибка при добавлении продукта:\", error);\r\n    }\r\n  };\r\n\r\n  // 2. UPDATE - Обновить существующий продукт\r\n  const updateProduct = async (id, updatedData) => {\r\n    try {\r\n      const { data } = await axios.put(`${API_URL}/items/${id}`, updatedData);\r\n      setItems((prev) =>\r\n        prev.map((item) => (item.id === id ? { ...item, ...data } : item))\r\n      );\r\n    } catch (error) {\r\n      console.error(\"Ошибка при обновлении продукта:\", error);\r\n    }\r\n  };\r\n\r\n  // 3. DELETE - Удалить продукт\r\n  const deleteProduct = async (id) => {\r\n    try {\r\n      await axios.delete(`${API_URL}/items/${id}`);\r\n      setItems((prev) => prev.filter((item) => item.id !== id));\r\n    } catch (error) {\r\n      console.error(\"Ошибка при удалении продукта:\", error);\r\n    }\r\n  };\r\n\r\n  // Добавление в корзину (UPDATE или CREATE для корзины)\r\n  const onAddToCart = useCallback(\r\n    async (item) => {\r\n      try {\r\n        const existingItem = cartItems.find((cartItem) => cartItem.title === item.title);\r\n\r\n        if (existingItem) {\r\n          const updatedItem = { ...existingItem, quantity: existingItem.quantity + 1 };\r\n          await axios.put(`${API_URL}/cart/${existingItem.id}`, updatedItem);\r\n          setCartItems((prevItems) =>\r\n            prevItems.map((el) => (el.id === existingItem.id ? updatedItem : el))\r\n          );\r\n        } else {\r\n          const newItem = { ...item, quantity: 1 };\r\n          const { data } = await axios.post(`${API_URL}/cart`, newItem);\r\n          setCartItems((prevItems) => [...prevItems, data]);\r\n        }\r\n      } catch (error) {\r\n        console.error(\"Ошибка при добавлении товара в корзину:\", error);\r\n      }\r\n    },\r\n    [cartItems]\r\n  );\r\n\r\n  // Удаление из корзины\r\n  const onRemoveItem = useCallback(\r\n    async (id) => {\r\n      try {\r\n        await axios.delete(`${API_URL}/cart/${id}`);\r\n        setCartItems((prevItems) => prevItems.filter((item) => item.id !== id));\r\n      } catch (error) {\r\n        console.error(\"Ошибка при удалении из корзины:\", error);\r\n      }\r\n    },\r\n    []\r\n  );\r\n\r\n  // Проверка, находится ли товар в корзине\r\n  const isItemInCart = (title) => cartItems.some((cartItem) => cartItem.title === title);\r\n\r\n  const value = {\r\n    items,\r\n    setItems,\r\n    addProduct,\r\n    updateProduct,\r\n    deleteProduct,\r\n    cartItems,\r\n    onAddToCart,\r\n    onRemoveItem,\r\n    isItemInCart,\r\n    loading,\r\n    error,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={value}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Context;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}