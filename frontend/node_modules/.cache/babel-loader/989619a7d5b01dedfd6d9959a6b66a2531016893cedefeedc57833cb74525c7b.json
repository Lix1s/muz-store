{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lakir\\\\Desktop\\\\lastTry\\\\frontend\\\\src\\\\pages\\\\profile\\\\Profile.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { fetchAuthMe } from '../../redux/slices/auth'; // Импортируем экшен для получения данных о пользователе\n\nimport './profile.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Profile = () => {\n  _s();\n  const dispatch = useDispatch();\n\n  // Получаем информацию о пользователе из Redux\n  const userData = useSelector(state => state.auth.data);\n  const isAuth = useSelector(state => state.auth.status === 'loaded'); // Проверяем, что пользователь авторизован\n\n  // При монтировании компонента, отправляем запрос для получения данных пользователя\n  useEffect(() => {\n    if (isAuth) {\n      dispatch(fetchAuthMe()); // Получаем данные пользователя, если он авторизован\n    }\n  }, [dispatch, isAuth]);\n\n  // Если пользователь не авторизован, показываем сообщение\n  if (!isAuth) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this); // Можно добавить спиннер, пока данные загружаются\n  }\n\n  // Если данные пользователя не загружены, выводим сообщение\n  if (!userData) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0414\\u0430\\u043D\\u043D\\u044B\\u0435 \\u043F\\u043E\\u043B\\u044C\\u0437\\u043E\\u0432\\u0430\\u0442\\u0435\\u043B\\u044F \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"profile\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"profile-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-header\",\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: userData.avatarUrl || \"img/pic/avatar.jpg\" // Если аватар не указан, используем дефолтное изображение\n            ,\n            alt: \"User Avatar\",\n            className: \"profile-avatar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            className: \"profile-name\",\n            children: userData.fullName || \"Имя пользователя\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"profile-email\",\n            children: userData.email || \"example@mail.com\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"profile-actions\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn edit-btn\",\n            children: \"\\u0420\\u0435\\u0434\\u0430\\u043A\\u0442\\u0438\\u0440\\u043E\\u0432\\u0430\\u0442\\u044C \\u043F\\u0440\\u043E\\u0444\\u0438\\u043B\\u044C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn logout-btn\",\n            children: \"\\u0412\\u044B\\u0439\\u0442\\u0438 \\u0438\\u0437 \\u0430\\u043A\\u043A\\u0430\\u0443\\u043D\\u0442\\u0430\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n};\n_s(Profile, \"RLPMfzThVF5Z/oQRCF3dwrejd24=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = Profile;\nexport default Profile;\nvar _c;\n$RefreshReg$(_c, \"Profile\");","map":{"version":3,"names":["React","useEffect","useDispatch","useSelector","fetchAuthMe","jsxDEV","_jsxDEV","Profile","_s","dispatch","userData","state","auth","data","isAuth","status","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","avatarUrl","alt","fullName","email","_c","$RefreshReg$"],"sources":["C:/Users/lakir/Desktop/lastTry/frontend/src/pages/profile/Profile.jsx"],"sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { fetchAuthMe } from '../../redux/slices/auth'; // Импортируем экшен для получения данных о пользователе\r\n\r\nimport './profile.css';\r\n\r\nconst Profile = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  // Получаем информацию о пользователе из Redux\r\n  const userData = useSelector((state) => state.auth.data); \r\n  const isAuth = useSelector((state) => state.auth.status === 'loaded'); // Проверяем, что пользователь авторизован\r\n  \r\n  // При монтировании компонента, отправляем запрос для получения данных пользователя\r\n  useEffect(() => {\r\n    if (isAuth) {\r\n      dispatch(fetchAuthMe());  // Получаем данные пользователя, если он авторизован\r\n    }\r\n  }, [dispatch, isAuth]);\r\n\r\n  // Если пользователь не авторизован, показываем сообщение\r\n  if (!isAuth) {\r\n    return <p>Загрузка...</p>; // Можно добавить спиннер, пока данные загружаются\r\n  }\r\n\r\n  // Если данные пользователя не загружены, выводим сообщение\r\n  if (!userData) {\r\n    return <p>Данные пользователя не найдены</p>;\r\n  }\r\n\r\n  return (\r\n    <div className=\"profile\">\r\n      <div className=\"container\">\r\n        <div className=\"profile-card\">\r\n          <div className=\"profile-header\">\r\n            {/* Отображаем аватар пользователя, если он есть */}\r\n            <img \r\n              src={userData.avatarUrl || \"img/pic/avatar.jpg\"}  // Если аватар не указан, используем дефолтное изображение\r\n              alt=\"User Avatar\"\r\n              className=\"profile-avatar\"\r\n            />\r\n            <h1 className=\"profile-name\">{userData.fullName || \"Имя пользователя\"}</h1>\r\n            <p className=\"profile-email\">{userData.email || \"example@mail.com\"}</p>\r\n          </div>\r\n          <div className=\"profile-actions\">\r\n            <button className=\"btn edit-btn\">Редактировать профиль</button>\r\n            <button className=\"btn logout-btn\">Выйти из аккаунта</button>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}