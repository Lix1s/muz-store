{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lakir\\\\Desktop\\\\lastTry\\\\frontend\\\\src\\\\components\\\\Context.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, createContext } from \"react\";\nimport axios from \"axios\";\nimport { useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nconst Context = props => {\n  _s();\n  const [items, setitems] = React.useState([]);\n  const [cartItems, setCartItems] = React.useState([]);\n\n  // Преобразуем price в число\n  const processedItems = cartItems.map(item => ({\n    ...item,\n    price: Number(item.price) // Убедимся, что price числовой\n  }));\n  const onAdd = () => {\n    onClickAdd({\n      id,\n      imageUrl,\n      category,\n      title,\n      price\n    }); // Здесь используется id\n    setIsAdded(!isAdded);\n  };\n  const onAddToCart = useCallback(async obj => {\n    try {\n      console.log(\"Sending item to server:\", obj); // Лог для проверки\n      const {\n        data\n      } = await axios.post('https://673876654eb22e24fca800c5.mockapi.io/cart', obj);\n      console.log(\"Response from server:\", data); // Лог для проверки ответа сервера\n      setCartItems(prev => [...prev, data]); // Добавляем товар в корзину\n    } catch (error) {\n      console.error(\"Ошибка при добавлении товара:\", error);\n    }\n  }, []);\n\n  // Загрузка данных корзины при монтировании компонента\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('https://673876654eb22e24fca800c5.mockapi.io/cart');\n        setCartItems(response.data);\n      } catch (error) {\n        console.error(\"Ошибка при загрузке данных:\", error);\n      }\n    };\n    fetchData();\n  }, []); // Выполняется только при монтировании компонента\n\n  const onRemoveItem = id => {\n    axios.delete(`https://673876654eb22e24fca800c5.mockapi.io/cart/${id}`);\n    setCartItems(prev => prev.filter(item => item.id !== id));\n  };\n  const [activeCategory, setActiveCategory] = useState(''); // Состояние для активной категории\n\n  const value = {\n    items,\n    processedItems,\n    setitems,\n    cartItems,\n    activeCategory,\n    setActiveCategory,\n    setCartItems,\n    onAddToCart,\n    onRemoveItem\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 7\n  }, this);\n};\n_s(Context, \"0hC7eZSQliM18BW2kbdvNU46tSw=\");\n_c = Context;\nexport default Context;\nvar _c;\n$RefreshReg$(_c, \"Context\");","map":{"version":3,"names":["React","useState","createContext","axios","useEffect","useCallback","jsxDEV","_jsxDEV","CartContext","Context","props","_s","items","setitems","cartItems","setCartItems","processedItems","map","item","price","Number","onAdd","onClickAdd","id","imageUrl","category","title","setIsAdded","isAdded","onAddToCart","obj","console","log","data","post","prev","error","fetchData","response","get","onRemoveItem","delete","filter","activeCategory","setActiveCategory","value","Provider","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lakir/Desktop/lastTry/frontend/src/components/Context.jsx"],"sourcesContent":["import React, {useState, createContext} from \"react\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useCallback  } from 'react';\r\nexport const CartContext = createContext();\r\n\r\nconst Context = (props) => {\r\n\r\n  const [items, setitems] = React.useState([]);\r\n    const [cartItems, setCartItems] = React.useState([]);\r\n    \r\n    // Преобразуем price в число\r\n    const processedItems = cartItems.map((item) => ({\r\n      ...item,\r\n      price: Number(item.price), // Убедимся, что price числовой\r\n  }));\r\n\r\n  const onAdd = () => {\r\n    onClickAdd({ id, imageUrl, category, title, price }); // Здесь используется id\r\n    setIsAdded(!isAdded);\r\n};\r\n\r\n    const onAddToCart = useCallback(async (obj) => {\r\n      try {\r\n          console.log(\"Sending item to server:\", obj); // Лог для проверки\r\n          const { data } = await axios.post(\r\n              'https://673876654eb22e24fca800c5.mockapi.io/cart',\r\n              obj\r\n          );\r\n          console.log(\"Response from server:\", data); // Лог для проверки ответа сервера\r\n          setCartItems((prev) => [...prev, data]); // Добавляем товар в корзину\r\n      } catch (error) {\r\n          console.error(\"Ошибка при добавлении товара:\", error);\r\n      }\r\n  }, []);\r\n\r\n  // Загрузка данных корзины при монтировании компонента\r\n  useEffect(() => {\r\n      const fetchData = async () => {\r\n          try {\r\n              const response = await axios.get('https://673876654eb22e24fca800c5.mockapi.io/cart');\r\n              setCartItems(response.data);\r\n          } catch (error) {\r\n              console.error(\"Ошибка при загрузке данных:\", error);\r\n          }\r\n      };\r\n\r\n      fetchData();\r\n  }, []); // Выполняется только при монтировании компонента\r\n  \r\n    const onRemoveItem = (id) => {\r\n      \r\n      axios.delete(`https://673876654eb22e24fca800c5.mockapi.io/cart/${id}`);\r\n      setCartItems((prev) => prev.filter(item => item.id !== id));\r\n    }\r\n\r\n    const [activeCategory, setActiveCategory] = useState(''); // Состояние для активной категории\r\n\r\n  const value = {\r\n    items,\r\n    processedItems,\r\n    setitems,\r\n    cartItems,\r\n    activeCategory,\r\n    setActiveCategory,\r\n    setCartItems,\r\n    onAddToCart,\r\n    onRemoveItem,\r\n  }\r\n    return (\r\n      <CartContext.Provider value={value}>\r\n        {props.children}\r\n      </CartContext.Provider>\r\n        \r\n        \r\n    );\r\n}\r\nexport default Context;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}