{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lakir\\\\Desktop\\\\lastTry\\\\frontend\\\\src\\\\components\\\\Context.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, createContext } from \"react\";\nimport axios from \"axios\";\nimport { useEffect, useCallback } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nconst Context = props => {\n  _s();\n  const [items, setitems] = React.useState([]);\n  const [cartItems, setCartItems] = React.useState([]);\n  const onAddToCart = useCallback(async obj => {\n    try {\n      // Проверяем, не добавлен ли товар уже в корзину\n      const itemInCart = cartItems.find(item => item.id === obj.id);\n      if (itemInCart) {\n        console.log(\"Item already in cart:\", obj);\n        return; // Не добавляем товар, если он уже есть в корзине\n      }\n      console.log(\"Adding item:\", obj); // Лог для проверки\n      const {\n        data\n      } = await axios.post('https://673876654eb22e24fca800c5.mockapi.io/cart', obj);\n\n      // Добавляем товар в корзину после успешного добавления на сервер\n      setCartItems(prev => [...prev, data]);\n    } catch (error) {\n      console.error(\"Ошибка при добавлении товара:\", error);\n    }\n  }, [cartItems]); // Добавили cartItems как зависимость, чтобы обновление корзины работало корректно\n\n  // Загрузка данных корзины при монтировании компонента\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await axios.get('https://673876654eb22e24fca800c5.mockapi.io/cart');\n        setCartItems(response.data);\n      } catch (error) {\n        console.error(\"Ошибка при загрузке данных:\", error);\n      }\n    };\n    fetchData();\n  }, []); // Выполняется только при монтировании компонента\n\n  const onRemoveItem = id => {\n    axios.delete(`https://673876654eb22e24fca800c5.mockapi.io/cart/${id}`);\n    setCartItems(prev => prev.filter(item => item.id !== id));\n  };\n  const [activeCategory, setActiveCategory] = useState(''); // Состояние для активной категории\n\n  const value = {\n    items,\n    setitems,\n    cartItems,\n    activeCategory,\n    setActiveCategory,\n    setCartItems,\n    onAddToCart,\n    onRemoveItem\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 7\n  }, this);\n};\n_s(Context, \"0hC7eZSQliM18BW2kbdvNU46tSw=\");\n_c = Context;\nexport default Context;\nvar _c;\n$RefreshReg$(_c, \"Context\");","map":{"version":3,"names":["React","useState","createContext","axios","useEffect","useCallback","jsxDEV","_jsxDEV","CartContext","Context","props","_s","items","setitems","cartItems","setCartItems","onAddToCart","obj","itemInCart","find","item","id","console","log","data","post","prev","error","fetchData","response","get","onRemoveItem","delete","filter","activeCategory","setActiveCategory","value","Provider","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lakir/Desktop/lastTry/frontend/src/components/Context.jsx"],"sourcesContent":["import React, {useState, createContext} from \"react\";\r\nimport axios from \"axios\";\r\nimport { useEffect, useCallback  } from 'react';\r\nexport const CartContext = createContext();\r\n\r\nconst Context = (props) => {\r\n\r\n  const [items, setitems] = React.useState([]);\r\n    const [cartItems, setCartItems] = React.useState([]);\r\n    \r\n    const onAddToCart = useCallback(async (obj) => {\r\n      try {\r\n          // Проверяем, не добавлен ли товар уже в корзину\r\n          const itemInCart = cartItems.find(item => item.id === obj.id);\r\n          if (itemInCart) {\r\n              console.log(\"Item already in cart:\", obj);\r\n              return;  // Не добавляем товар, если он уже есть в корзине\r\n          }\r\n  \r\n          console.log(\"Adding item:\", obj); // Лог для проверки\r\n          const { data } = await axios.post(\r\n              'https://673876654eb22e24fca800c5.mockapi.io/cart',\r\n              obj\r\n          );\r\n  \r\n          // Добавляем товар в корзину после успешного добавления на сервер\r\n          setCartItems((prev) => [...prev, data]);\r\n  \r\n      } catch (error) {\r\n          console.error(\"Ошибка при добавлении товара:\", error);\r\n      }\r\n  }, [cartItems]);  // Добавили cartItems как зависимость, чтобы обновление корзины работало корректно\r\n\r\n  // Загрузка данных корзины при монтировании компонента\r\n  useEffect(() => {\r\n      const fetchData = async () => {\r\n          try {\r\n              const response = await axios.get('https://673876654eb22e24fca800c5.mockapi.io/cart');\r\n              setCartItems(response.data);\r\n          } catch (error) {\r\n              console.error(\"Ошибка при загрузке данных:\", error);\r\n          }\r\n      };\r\n\r\n      fetchData();\r\n  }, []); // Выполняется только при монтировании компонента\r\n  \r\n    const onRemoveItem = (id) => {\r\n      \r\n      axios.delete(`https://673876654eb22e24fca800c5.mockapi.io/cart/${id}`);\r\n      setCartItems((prev) => prev.filter(item => item.id !== id));\r\n    }\r\n\r\n    const [activeCategory, setActiveCategory] = useState(''); // Состояние для активной категории\r\n\r\n  const value = {\r\n    items,\r\n    setitems,\r\n    cartItems,\r\n    activeCategory,\r\n    setActiveCategory,\r\n    setCartItems,\r\n    onAddToCart,\r\n    onRemoveItem,\r\n  }\r\n    return (\r\n      <CartContext.Provider value={value}>\r\n        {props.children}\r\n      </CartContext.Provider>\r\n        \r\n        \r\n    );\r\n}\r\nexport default Context;"],"mappings":";;AAAA,OAAOA,KAAK,IAAGC,QAAQ,EAAEC,aAAa,QAAO,OAAO;AACpD,OAAOC,KAAK,MAAM,OAAO;AACzB,SAASC,SAAS,EAAEC,WAAW,QAAS,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAChD,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,MAAMO,OAAO,GAAIC,KAAK,IAAK;EAAAC,EAAA;EAEzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,KAAK,CAACC,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACa,SAAS,EAAEC,YAAY,CAAC,GAAGf,KAAK,CAACC,QAAQ,CAAC,EAAE,CAAC;EAEpD,MAAMe,WAAW,GAAGX,WAAW,CAAC,MAAOY,GAAG,IAAK;IAC7C,IAAI;MACA;MACA,MAAMC,UAAU,GAAGJ,SAAS,CAACK,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,GAAG,CAACI,EAAE,CAAC;MAC7D,IAAIH,UAAU,EAAE;QACZI,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEN,GAAG,CAAC;QACzC,OAAO,CAAE;MACb;MAEAK,OAAO,CAACC,GAAG,CAAC,cAAc,EAAEN,GAAG,CAAC,CAAC,CAAC;MAClC,MAAM;QAAEO;MAAK,CAAC,GAAG,MAAMrB,KAAK,CAACsB,IAAI,CAC7B,kDAAkD,EAClDR,GACJ,CAAC;;MAED;MACAF,YAAY,CAAEW,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEF,IAAI,CAAC,CAAC;IAE3C,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZL,OAAO,CAACK,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;IACzD;EACJ,CAAC,EAAE,CAACb,SAAS,CAAC,CAAC,CAAC,CAAE;;EAElB;EACAV,SAAS,CAAC,MAAM;IACZ,MAAMwB,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC1B,IAAI;QACA,MAAMC,QAAQ,GAAG,MAAM1B,KAAK,CAAC2B,GAAG,CAAC,kDAAkD,CAAC;QACpFf,YAAY,CAACc,QAAQ,CAACL,IAAI,CAAC;MAC/B,CAAC,CAAC,OAAOG,KAAK,EAAE;QACZL,OAAO,CAACK,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACvD;IACJ,CAAC;IAEDC,SAAS,CAAC,CAAC;EACf,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;;EAEN,MAAMG,YAAY,GAAIV,EAAE,IAAK;IAE3BlB,KAAK,CAAC6B,MAAM,CAAC,oDAAoDX,EAAE,EAAE,CAAC;IACtEN,YAAY,CAAEW,IAAI,IAAKA,IAAI,CAACO,MAAM,CAACb,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKA,EAAE,CAAC,CAAC;EAC7D,CAAC;EAED,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGlC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;;EAE5D,MAAMmC,KAAK,GAAG;IACZxB,KAAK;IACLC,QAAQ;IACRC,SAAS;IACToB,cAAc;IACdC,iBAAiB;IACjBpB,YAAY;IACZC,WAAW;IACXe;EACF,CAAC;EACC,oBACExB,OAAA,CAACC,WAAW,CAAC6B,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAE,QAAA,EAChC5B,KAAK,CAAC4B;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAI7B,CAAC;AAAA/B,EAAA,CAnEKF,OAAO;AAAAkC,EAAA,GAAPlC,OAAO;AAoEb,eAAeA,OAAO;AAAC,IAAAkC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}