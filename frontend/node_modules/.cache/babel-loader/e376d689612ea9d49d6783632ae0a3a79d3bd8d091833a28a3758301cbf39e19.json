{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lakir\\\\Desktop\\\\lastTry\\\\frontend\\\\src\\\\components\\\\Context.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, createContext, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nconst Context = props => {\n  _s();\n  const [items, setitems] = useState([]); // Список всех товаров\n  const [cartItems, setCartItems] = useState([]); // Товары в корзине\n\n  // Преобразуем price в число для корзины\n  const processedItems = cartItems.map(item => ({\n    ...item,\n    price: Number(item.price) // Убедимся, что price числовой\n  }));\n\n  // Загрузка товаров из API (например, для корзины)\n  useEffect(() => {\n    const fetchCartItems = async () => {\n      try {\n        const {\n          data\n        } = await axios.get('https://673876654eb22e24fca800c5.mockapi.io/cart');\n        setCartItems(data); // Загружаем корзину с сервера\n      } catch (error) {\n        console.error(\"Ошибка при загрузке корзины:\", error);\n      }\n    };\n    fetchCartItems();\n  }, []);\n\n  // Функция для добавления товара в корзину\n  const onAddToCart = useCallback(async item => {\n    try {\n      // Проверяем, добавлен ли товар в корзину\n      if (cartItems.some(cartItem => cartItem.title === item.title)) {\n        return; // Если товар уже в корзине, не добавляем его снова\n      }\n\n      // Отправляем запрос на добавление товара в корзину на сервер\n      const {\n        data\n      } = await axios.post('https://673876654eb22e24fca800c5.mockapi.io/cart', item);\n\n      // Обновляем локальное состояние корзины\n      setCartItems(prevItems => [...prevItems, data]);\n    } catch (error) {\n      console.error(\"Ошибка при добавлении товара в корзину:\", error);\n    }\n  }, [cartItems]);\n\n  // Функция для удаления товара из корзины\n  const onRemoveItem = id => {\n    // Удаляем товар из корзины на сервере\n    axios.delete(`https://673876654eb22e24fca800c5.mockapi.io/cart/${id}`).then(() => {\n      // Обновляем локальное состояние корзины\n      setCartItems(prev => prev.filter(item => item.id !== id));\n    }).catch(error => {\n      console.error(\"Ошибка при удалении товара из корзины:\", error);\n    });\n  };\n\n  // Функция для проверки, добавлен ли товар в корзину\n  const isItemInCart = title => {\n    return cartItems.some(cartItem => cartItem.title === title);\n  };\n\n  // Состояние для активной категории товаров\n  const [activeCategory, setActiveCategory] = useState('');\n\n  // Контекст, который предоставляет необходимые данные и функции компонентам\n  const value = {\n    items,\n    isItemInCart,\n    processedItems,\n    setitems,\n    cartItems,\n    activeCategory,\n    setActiveCategory,\n    setCartItems,\n    onAddToCart,\n    onRemoveItem\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n};\n_s(Context, \"8VoIOTjMU842bcAsO/gZESBG3XM=\");\n_c = Context;\nexport default Context;\nvar _c;\n$RefreshReg$(_c, \"Context\");","map":{"version":3,"names":["React","useState","createContext","useEffect","useCallback","axios","jsxDEV","_jsxDEV","CartContext","Context","props","_s","items","setitems","cartItems","setCartItems","processedItems","map","item","price","Number","fetchCartItems","data","get","error","console","onAddToCart","some","cartItem","title","post","prevItems","onRemoveItem","id","delete","then","prev","filter","catch","isItemInCart","activeCategory","setActiveCategory","value","Provider","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lakir/Desktop/lastTry/frontend/src/components/Context.jsx"],"sourcesContent":["import React, { useState, createContext, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const CartContext = createContext();\r\n\r\nconst Context = (props) => {\r\n  const [items, setitems] = useState([]); // Список всех товаров\r\n  const [cartItems, setCartItems] = useState([]); // Товары в корзине\r\n\r\n  // Преобразуем price в число для корзины\r\n  const processedItems = cartItems.map((item) => ({\r\n    ...item,\r\n    price: Number(item.price), // Убедимся, что price числовой\r\n  }));\r\n\r\n  // Загрузка товаров из API (например, для корзины)\r\n  useEffect(() => {\r\n    const fetchCartItems = async () => {\r\n      try {\r\n        const { data } = await axios.get('https://673876654eb22e24fca800c5.mockapi.io/cart');\r\n        setCartItems(data); // Загружаем корзину с сервера\r\n      } catch (error) {\r\n        console.error(\"Ошибка при загрузке корзины:\", error);\r\n      }\r\n    };\r\n    fetchCartItems();\r\n  }, []);\r\n\r\n  // Функция для добавления товара в корзину\r\n  const onAddToCart = useCallback(async (item) => {\r\n    try {\r\n      // Проверяем, добавлен ли товар в корзину\r\n      if (cartItems.some((cartItem) => cartItem.title === item.title)) {\r\n        return; // Если товар уже в корзине, не добавляем его снова\r\n      }\r\n\r\n      // Отправляем запрос на добавление товара в корзину на сервер\r\n      const { data } = await axios.post('https://673876654eb22e24fca800c5.mockapi.io/cart', item);\r\n\r\n      // Обновляем локальное состояние корзины\r\n      setCartItems((prevItems) => [...prevItems, data]);\r\n    } catch (error) {\r\n      console.error(\"Ошибка при добавлении товара в корзину:\", error);\r\n    }\r\n  }, [cartItems]);\r\n\r\n  // Функция для удаления товара из корзины\r\n  const onRemoveItem = (id) => {\r\n    // Удаляем товар из корзины на сервере\r\n    axios.delete(`https://673876654eb22e24fca800c5.mockapi.io/cart/${id}`)\r\n      .then(() => {\r\n        // Обновляем локальное состояние корзины\r\n        setCartItems((prev) => prev.filter(item => item.id !== id));\r\n      })\r\n      .catch((error) => {\r\n        console.error(\"Ошибка при удалении товара из корзины:\", error);\r\n      });\r\n  };\r\n\r\n  // Функция для проверки, добавлен ли товар в корзину\r\n  const isItemInCart = (title) => {\r\n    return cartItems.some((cartItem) => cartItem.title === title);\r\n  };\r\n\r\n  // Состояние для активной категории товаров\r\n  const [activeCategory, setActiveCategory] = useState('');\r\n\r\n  // Контекст, который предоставляет необходимые данные и функции компонентам\r\n  const value = {\r\n    items,\r\n    isItemInCart,\r\n    processedItems,\r\n    setitems,\r\n    cartItems,\r\n    activeCategory,\r\n    setActiveCategory,\r\n    setCartItems,\r\n    onAddToCart,\r\n    onRemoveItem,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={value}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Context;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}