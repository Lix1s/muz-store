{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lakir\\\\Desktop\\\\lastTry\\\\frontend\\\\src\\\\components\\\\Context.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, createContext, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nconst API_URL = \"https://673876654eb22e24fca800c5.mockapi.io\";\nconst Context = props => {\n  _s();\n  const [items, setitems, setItems] = useState([]); // Список всех товаров\n  const [cartItems, setCartItems] = useState([]); // Товары в корзине\n  const [loading, setLoading] = useState(true); // Загрузка данных\n  const [error, setError] = useState(null); // Ошибки\n  // Преобразуем price в число для корзины\n  const processedItems = cartItems.map(item => ({\n    ...item,\n    price: Number(item.price) // Убедимся, что price числовой\n  }));\n\n  // Загрузка товаров из API (например, для корзины)\n  useEffect(() => {\n    const fetchCartItems = async () => {\n      try {\n        const {\n          data\n        } = await axios.get('https://673876654eb22e24fca800c5.mockapi.io/cart');\n        setCartItems(data); // Загружаем корзину с сервера\n      } catch (error) {\n        console.error(\"Ошибка при загрузке корзины:\", error);\n      }\n    };\n    fetchCartItems();\n  }, []);\n\n  // Загрузка данных\n  useEffect(() => {\n    axios.get('https://673876654eb22e24fca800c5.mockapi.io/items').then(res => {\n      console.log('Items data:', res.data);\n      setitems(res.data);\n    });\n    axios.get('https://673876654eb22e24fca800c5.mockapi.io/cart').then(res => {\n      console.log('Cart data:', res.data);\n      setCartItems(res.data);\n    });\n  }, []);\n  const onAddToCart = useCallback(async item => {\n    try {\n      const existingItem = cartItems.find(cartItem => cartItem.title === item.title);\n      if (existingItem) {\n        // Обновляем количество на сервере\n        const updatedItem = {\n          ...existingItem,\n          quantity: existingItem.quantity + 1\n        };\n        await axios.put(`https://673876654eb22e24fca800c5.mockapi.io/cart/${existingItem.id}`, updatedItem);\n        setCartItems(prevItems => prevItems.map(el => el.id === existingItem.id ? updatedItem : el));\n      } else {\n        // Добавляем новый товар\n        const newItem = {\n          ...item,\n          quantity: 1\n        };\n        const {\n          data\n        } = await axios.post('https://673876654eb22e24fca800c5.mockapi.io/cart', newItem);\n        setCartItems(prevItems => [...prevItems, data]);\n      }\n    } catch (error) {\n      console.error(\"Ошибка при добавлении товара в корзину:\", error);\n    }\n  }, [cartItems]);\n\n  // Функция для удаления товара из корзины\n  const onRemoveItem = async id => {\n    try {\n      // Находим товар по ID\n      const itemToUpdate = cartItems.find(item => item.id === id);\n      if (!itemToUpdate) return;\n      if (itemToUpdate.quantity > 1) {\n        // Если количество больше 1, уменьшаем количество\n        const updatedItem = {\n          ...itemToUpdate,\n          quantity: itemToUpdate.quantity - 1\n        };\n        await axios.put(`https://673876654eb22e24fca800c5.mockapi.io/cart/${id}`, updatedItem);\n\n        // Обновляем локальное состояние\n        setCartItems(prevItems => prevItems.map(item => item.id === id ? updatedItem : item));\n      } else {\n        // Если количество равно 1, удаляем товар полностью\n        await axios.delete(`https://673876654eb22e24fca800c5.mockapi.io/cart/${id}`);\n        setCartItems(prevItems => prevItems.filter(item => item.id !== id));\n      }\n    } catch (error) {\n      console.error(\"Ошибка при обновлении количества товара:\", error);\n    }\n  };\n\n  // Добавление товара\n  const addProduct = async newProduct => {\n    try {\n      const {\n        data\n      } = await axios.post(`${API_URL}/items`, newProduct);\n      setItems(prev => [...prev, data]);\n    } catch (error) {\n      setError(\"Ошибка при добавлении товара.\");\n    }\n  };\n\n  // Обновление товара\n  const updateProduct = async (id, updatedData) => {\n    try {\n      const {\n        data\n      } = await axios.put(`${API_URL}/items/${id}`, updatedData);\n      setItems(prev => prev.map(item => item.id === id ? {\n        ...item,\n        ...data\n      } : item));\n    } catch (error) {\n      setError(\"Ошибка при обновлении товара.\");\n    }\n  };\n\n  // Удаление товара\n  const deleteProduct = async id => {\n    try {\n      await axios.delete(`${API_URL}/items/${id}`);\n      setItems(prev => prev.filter(item => item.id !== id));\n    } catch (error) {\n      setError(\"Ошибка при удалении товара.\");\n    }\n  };\n\n  // Функция для проверки, добавлен ли товар в корзину\n  const isItemInCart = title => {\n    return cartItems.some(cartItem => cartItem.title === title);\n  };\n\n  // Состояние для активной категории товаров\n  const [activeCategory, setActiveCategory] = useState('');\n\n  // Контекст, который предоставляет необходимые данные и функции компонентам\n  const value = {\n    items,\n    isItemInCart,\n    processedItems,\n    setitems,\n    cartItems,\n    activeCategory,\n    setActiveCategory,\n    setCartItems,\n    onAddToCart,\n    onRemoveItem\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n};\n_s(Context, \"wfnE+65h6zFoz0/kBFatB9t8CLo=\");\n_c = Context;\nexport default Context;\nvar _c;\n$RefreshReg$(_c, \"Context\");","map":{"version":3,"names":["React","useState","createContext","useEffect","useCallback","axios","jsxDEV","_jsxDEV","CartContext","API_URL","Context","props","_s","items","setitems","setItems","cartItems","setCartItems","loading","setLoading","error","setError","processedItems","map","item","price","Number","fetchCartItems","data","get","console","then","res","log","onAddToCart","existingItem","find","cartItem","title","updatedItem","quantity","put","id","prevItems","el","newItem","post","onRemoveItem","itemToUpdate","delete","filter","addProduct","newProduct","prev","updateProduct","updatedData","deleteProduct","isItemInCart","some","activeCategory","setActiveCategory","value","Provider","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/lakir/Desktop/lastTry/frontend/src/components/Context.jsx"],"sourcesContent":["import React, { useState, createContext, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const CartContext = createContext();\r\nconst API_URL = \"https://673876654eb22e24fca800c5.mockapi.io\";\r\nconst Context = (props) => {\r\n  const [items, setitems, setItems] = useState([]); // Список всех товаров\r\n  const [cartItems, setCartItems] = useState([]); // Товары в корзине\r\n  const [loading, setLoading] = useState(true); // Загрузка данных\r\n  const [error, setError] = useState(null); // Ошибки\r\n  // Преобразуем price в число для корзины\r\n  const processedItems = cartItems.map((item) => ({\r\n    ...item,\r\n    price: Number(item.price), // Убедимся, что price числовой\r\n  }));\r\n\r\n  // Загрузка товаров из API (например, для корзины)\r\n  useEffect(() => {\r\n    const fetchCartItems = async () => {\r\n      try {\r\n        const { data } = await axios.get('https://673876654eb22e24fca800c5.mockapi.io/cart');\r\n        setCartItems(data); // Загружаем корзину с сервера\r\n      } catch (error) {\r\n        console.error(\"Ошибка при загрузке корзины:\", error);\r\n      }\r\n    };\r\n    fetchCartItems();\r\n  }, []);\r\n\r\n    // Загрузка данных\r\n    useEffect(() => {\r\n      axios.get('https://673876654eb22e24fca800c5.mockapi.io/items').then((res) => {\r\n          console.log('Items data:', res.data);\r\n          setitems(res.data);\r\n      });\r\n      axios.get('https://673876654eb22e24fca800c5.mockapi.io/cart').then((res) => {\r\n          console.log('Cart data:', res.data);\r\n          setCartItems(res.data);\r\n      });\r\n  }, []);\r\n\r\n  const onAddToCart = useCallback(async (item) => {\r\n    try {\r\n      const existingItem = cartItems.find((cartItem) => cartItem.title === item.title);\r\n  \r\n      if (existingItem) {\r\n        // Обновляем количество на сервере\r\n        const updatedItem = { ...existingItem, quantity: existingItem.quantity + 1 };\r\n        await axios.put(`https://673876654eb22e24fca800c5.mockapi.io/cart/${existingItem.id}`, updatedItem);\r\n        setCartItems((prevItems) =>\r\n          prevItems.map((el) => (el.id === existingItem.id ? updatedItem : el))\r\n        );\r\n      } else {\r\n        // Добавляем новый товар\r\n        const newItem = { ...item, quantity: 1 };\r\n        const { data } = await axios.post('https://673876654eb22e24fca800c5.mockapi.io/cart', newItem);\r\n        setCartItems((prevItems) => [...prevItems, data]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Ошибка при добавлении товара в корзину:\", error);\r\n    }\r\n  }, [cartItems]);\r\n\r\n  // Функция для удаления товара из корзины\r\n  const onRemoveItem = async (id) => {\r\n    try {\r\n      // Находим товар по ID\r\n      const itemToUpdate = cartItems.find((item) => item.id === id);\r\n  \r\n      if (!itemToUpdate) return;\r\n  \r\n      if (itemToUpdate.quantity > 1) {\r\n        // Если количество больше 1, уменьшаем количество\r\n        const updatedItem = { ...itemToUpdate, quantity: itemToUpdate.quantity - 1 };\r\n        await axios.put(`https://673876654eb22e24fca800c5.mockapi.io/cart/${id}`, updatedItem);\r\n  \r\n        // Обновляем локальное состояние\r\n        setCartItems((prevItems) =>\r\n          prevItems.map((item) => (item.id === id ? updatedItem : item))\r\n        );\r\n      } else {\r\n        // Если количество равно 1, удаляем товар полностью\r\n        await axios.delete(`https://673876654eb22e24fca800c5.mockapi.io/cart/${id}`);\r\n        setCartItems((prevItems) => prevItems.filter((item) => item.id !== id));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Ошибка при обновлении количества товара:\", error);\r\n    }\r\n  };\r\n\r\n  // Добавление товара\r\n  const addProduct = async (newProduct) => {\r\n    try {\r\n      const { data } = await axios.post(`${API_URL}/items`, newProduct);\r\n      setItems((prev) => [...prev, data]);\r\n    } catch (error) {\r\n      setError(\"Ошибка при добавлении товара.\");\r\n    }\r\n  };\r\n\r\n  // Обновление товара\r\n  const updateProduct = async (id, updatedData) => {\r\n    try {\r\n      const { data } = await axios.put(`${API_URL}/items/${id}`, updatedData);\r\n      setItems((prev) =>\r\n        prev.map((item) => (item.id === id ? { ...item, ...data } : item))\r\n      );\r\n    } catch (error) {\r\n      setError(\"Ошибка при обновлении товара.\");\r\n    }\r\n  };\r\n\r\n  // Удаление товара\r\n  const deleteProduct = async (id) => {\r\n    try {\r\n      await axios.delete(`${API_URL}/items/${id}`);\r\n      setItems((prev) => prev.filter((item) => item.id !== id));\r\n    } catch (error) {\r\n      setError(\"Ошибка при удалении товара.\");\r\n    }\r\n  };\r\n  \r\n  // Функция для проверки, добавлен ли товар в корзину\r\n  const isItemInCart = (title) => {\r\n    return cartItems.some((cartItem) => cartItem.title === title);\r\n  };\r\n\r\n  // Состояние для активной категории товаров\r\n  const [activeCategory, setActiveCategory] = useState('');\r\n\r\n  // Контекст, который предоставляет необходимые данные и функции компонентам\r\n  const value = {\r\n    items,\r\n    isItemInCart,\r\n    processedItems,\r\n    setitems,\r\n    cartItems,\r\n    activeCategory,\r\n    setActiveCategory,\r\n    setCartItems,\r\n    onAddToCart,\r\n    onRemoveItem,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={value}>\r\n      {props.children}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Context;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,aAAa,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC9E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAC1C,MAAMO,OAAO,GAAG,6CAA6C;AAC7D,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,EAAEC,QAAQ,CAAC,GAAGd,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAClD,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACmB,KAAK,EAAEC,QAAQ,CAAC,GAAGpB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC1C;EACA,MAAMqB,cAAc,GAAGN,SAAS,CAACO,GAAG,CAAEC,IAAI,KAAM;IAC9C,GAAGA,IAAI;IACPC,KAAK,EAAEC,MAAM,CAACF,IAAI,CAACC,KAAK,CAAC,CAAE;EAC7B,CAAC,CAAC,CAAC;;EAEH;EACAtB,SAAS,CAAC,MAAM;IACd,MAAMwB,cAAc,GAAG,MAAAA,CAAA,KAAY;MACjC,IAAI;QACF,MAAM;UAAEC;QAAK,CAAC,GAAG,MAAMvB,KAAK,CAACwB,GAAG,CAAC,kDAAkD,CAAC;QACpFZ,YAAY,CAACW,IAAI,CAAC,CAAC,CAAC;MACtB,CAAC,CAAC,OAAOR,KAAK,EAAE;QACdU,OAAO,CAACV,KAAK,CAAC,8BAA8B,EAAEA,KAAK,CAAC;MACtD;IACF,CAAC;IACDO,cAAc,CAAC,CAAC;EAClB,CAAC,EAAE,EAAE,CAAC;;EAEJ;EACAxB,SAAS,CAAC,MAAM;IACdE,KAAK,CAACwB,GAAG,CAAC,mDAAmD,CAAC,CAACE,IAAI,CAAEC,GAAG,IAAK;MACzEF,OAAO,CAACG,GAAG,CAAC,aAAa,EAAED,GAAG,CAACJ,IAAI,CAAC;MACpCd,QAAQ,CAACkB,GAAG,CAACJ,IAAI,CAAC;IACtB,CAAC,CAAC;IACFvB,KAAK,CAACwB,GAAG,CAAC,kDAAkD,CAAC,CAACE,IAAI,CAAEC,GAAG,IAAK;MACxEF,OAAO,CAACG,GAAG,CAAC,YAAY,EAAED,GAAG,CAACJ,IAAI,CAAC;MACnCX,YAAY,CAACe,GAAG,CAACJ,IAAI,CAAC;IAC1B,CAAC,CAAC;EACN,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMM,WAAW,GAAG9B,WAAW,CAAC,MAAOoB,IAAI,IAAK;IAC9C,IAAI;MACF,MAAMW,YAAY,GAAGnB,SAAS,CAACoB,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,KAAK,KAAKd,IAAI,CAACc,KAAK,CAAC;MAEhF,IAAIH,YAAY,EAAE;QAChB;QACA,MAAMI,WAAW,GAAG;UAAE,GAAGJ,YAAY;UAAEK,QAAQ,EAAEL,YAAY,CAACK,QAAQ,GAAG;QAAE,CAAC;QAC5E,MAAMnC,KAAK,CAACoC,GAAG,CAAC,oDAAoDN,YAAY,CAACO,EAAE,EAAE,EAAEH,WAAW,CAAC;QACnGtB,YAAY,CAAE0B,SAAS,IACrBA,SAAS,CAACpB,GAAG,CAAEqB,EAAE,IAAMA,EAAE,CAACF,EAAE,KAAKP,YAAY,CAACO,EAAE,GAAGH,WAAW,GAAGK,EAAG,CACtE,CAAC;MACH,CAAC,MAAM;QACL;QACA,MAAMC,OAAO,GAAG;UAAE,GAAGrB,IAAI;UAAEgB,QAAQ,EAAE;QAAE,CAAC;QACxC,MAAM;UAAEZ;QAAK,CAAC,GAAG,MAAMvB,KAAK,CAACyC,IAAI,CAAC,kDAAkD,EAAED,OAAO,CAAC;QAC9F5B,YAAY,CAAE0B,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAEf,IAAI,CAAC,CAAC;MACnD;IACF,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdU,OAAO,CAACV,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;IACjE;EACF,CAAC,EAAE,CAACJ,SAAS,CAAC,CAAC;;EAEf;EACA,MAAM+B,YAAY,GAAG,MAAOL,EAAE,IAAK;IACjC,IAAI;MACF;MACA,MAAMM,YAAY,GAAGhC,SAAS,CAACoB,IAAI,CAAEZ,IAAI,IAAKA,IAAI,CAACkB,EAAE,KAAKA,EAAE,CAAC;MAE7D,IAAI,CAACM,YAAY,EAAE;MAEnB,IAAIA,YAAY,CAACR,QAAQ,GAAG,CAAC,EAAE;QAC7B;QACA,MAAMD,WAAW,GAAG;UAAE,GAAGS,YAAY;UAAER,QAAQ,EAAEQ,YAAY,CAACR,QAAQ,GAAG;QAAE,CAAC;QAC5E,MAAMnC,KAAK,CAACoC,GAAG,CAAC,oDAAoDC,EAAE,EAAE,EAAEH,WAAW,CAAC;;QAEtF;QACAtB,YAAY,CAAE0B,SAAS,IACrBA,SAAS,CAACpB,GAAG,CAAEC,IAAI,IAAMA,IAAI,CAACkB,EAAE,KAAKA,EAAE,GAAGH,WAAW,GAAGf,IAAK,CAC/D,CAAC;MACH,CAAC,MAAM;QACL;QACA,MAAMnB,KAAK,CAAC4C,MAAM,CAAC,oDAAoDP,EAAE,EAAE,CAAC;QAC5EzB,YAAY,CAAE0B,SAAS,IAAKA,SAAS,CAACO,MAAM,CAAE1B,IAAI,IAAKA,IAAI,CAACkB,EAAE,KAAKA,EAAE,CAAC,CAAC;MACzE;IACF,CAAC,CAAC,OAAOtB,KAAK,EAAE;MACdU,OAAO,CAACV,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;IAClE;EACF,CAAC;;EAED;EACA,MAAM+B,UAAU,GAAG,MAAOC,UAAU,IAAK;IACvC,IAAI;MACF,MAAM;QAAExB;MAAK,CAAC,GAAG,MAAMvB,KAAK,CAACyC,IAAI,CAAC,GAAGrC,OAAO,QAAQ,EAAE2C,UAAU,CAAC;MACjErC,QAAQ,CAAEsC,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEzB,IAAI,CAAC,CAAC;IACrC,CAAC,CAAC,OAAOR,KAAK,EAAE;MACdC,QAAQ,CAAC,+BAA+B,CAAC;IAC3C;EACF,CAAC;;EAED;EACA,MAAMiC,aAAa,GAAG,MAAAA,CAAOZ,EAAE,EAAEa,WAAW,KAAK;IAC/C,IAAI;MACF,MAAM;QAAE3B;MAAK,CAAC,GAAG,MAAMvB,KAAK,CAACoC,GAAG,CAAC,GAAGhC,OAAO,UAAUiC,EAAE,EAAE,EAAEa,WAAW,CAAC;MACvExC,QAAQ,CAAEsC,IAAI,IACZA,IAAI,CAAC9B,GAAG,CAAEC,IAAI,IAAMA,IAAI,CAACkB,EAAE,KAAKA,EAAE,GAAG;QAAE,GAAGlB,IAAI;QAAE,GAAGI;MAAK,CAAC,GAAGJ,IAAK,CACnE,CAAC;IACH,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdC,QAAQ,CAAC,+BAA+B,CAAC;IAC3C;EACF,CAAC;;EAED;EACA,MAAMmC,aAAa,GAAG,MAAOd,EAAE,IAAK;IAClC,IAAI;MACF,MAAMrC,KAAK,CAAC4C,MAAM,CAAC,GAAGxC,OAAO,UAAUiC,EAAE,EAAE,CAAC;MAC5C3B,QAAQ,CAAEsC,IAAI,IAAKA,IAAI,CAACH,MAAM,CAAE1B,IAAI,IAAKA,IAAI,CAACkB,EAAE,KAAKA,EAAE,CAAC,CAAC;IAC3D,CAAC,CAAC,OAAOtB,KAAK,EAAE;MACdC,QAAQ,CAAC,6BAA6B,CAAC;IACzC;EACF,CAAC;;EAED;EACA,MAAMoC,YAAY,GAAInB,KAAK,IAAK;IAC9B,OAAOtB,SAAS,CAAC0C,IAAI,CAAErB,QAAQ,IAAKA,QAAQ,CAACC,KAAK,KAAKA,KAAK,CAAC;EAC/D,CAAC;;EAED;EACA,MAAM,CAACqB,cAAc,EAAEC,iBAAiB,CAAC,GAAG3D,QAAQ,CAAC,EAAE,CAAC;;EAExD;EACA,MAAM4D,KAAK,GAAG;IACZhD,KAAK;IACL4C,YAAY;IACZnC,cAAc;IACdR,QAAQ;IACRE,SAAS;IACT2C,cAAc;IACdC,iBAAiB;IACjB3C,YAAY;IACZiB,WAAW;IACXa;EACF,CAAC;EAED,oBACExC,OAAA,CAACC,WAAW,CAACsD,QAAQ;IAACD,KAAK,EAAEA,KAAM;IAAAE,QAAA,EAChCpD,KAAK,CAACoD;EAAQ;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACK,CAAC;AAE3B,CAAC;AAACvD,EAAA,CAhJIF,OAAO;AAAA0D,EAAA,GAAP1D,OAAO;AAkJb,eAAeA,OAAO;AAAC,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}