{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\lakir\\\\Desktop\\\\lastTry\\\\frontend\\\\src\\\\components\\\\Context.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState, createContext, useEffect, useCallback } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CartContext = /*#__PURE__*/createContext();\nconst API_URL = \"https://673876654eb22e24fca800c5.mockapi.io\";\nconst Context = props => {\n  _s();\n  const [items, setItems] = useState([]); // Товары\n  const [cartItems, setCartItems] = useState([]); // Корзина\n  const [loading, setLoading] = useState(true); // Загрузка данных\n  const [error, setError] = useState(null); // Ошибки\n\n  // Преобразование данных корзины\n  const processedItems = (cartItems === null || cartItems === void 0 ? void 0 : cartItems.map(item => ({\n    ...item,\n    price: Number(item.price)\n  }))) || [];\n\n  // Загрузка данных из API\n  const fetchData = useCallback(async () => {\n    setLoading(true);\n    setError(null);\n    try {\n      const [itemsResponse, cartResponse] = await Promise.allSettled([axios.get(`${API_URL}/items`), axios.get(`${API_URL}/cart`)]);\n      if (itemsResponse.status === \"fulfilled\") setItems(itemsResponse.value.data);\n      if (cartResponse.status === \"fulfilled\") setCartItems(cartResponse.value.data);\n    } catch (err) {\n      setError(\"Ошибка при загрузке данных!\");\n    } finally {\n      setLoading(false);\n    }\n  }, []);\n  useEffect(() => {\n    fetchData();\n  }, [fetchData]);\n\n  // Добавление товара\n  const addProduct = async newProduct => {\n    try {\n      const {\n        data\n      } = await axios.post(`${API_URL}/items`, newProduct);\n      setItems(prev => [...prev, data]);\n    } catch (error) {\n      setError(\"Ошибка при добавлении товара.\");\n    }\n  };\n\n  // Обновление товара\n  const updateProduct = async (id, updatedData) => {\n    try {\n      const {\n        data\n      } = await axios.put(`${API_URL}/items/${id}`, updatedData);\n      setItems(prev => prev.map(item => item.id === id ? {\n        ...item,\n        ...data\n      } : item));\n    } catch (error) {\n      setError(\"Ошибка при обновлении товара.\");\n    }\n  };\n\n  // Удаление товара\n  const deleteProduct = async id => {\n    try {\n      await axios.delete(`${API_URL}/items/${id}`);\n      setItems(prev => prev.filter(item => item.id !== id));\n    } catch (error) {\n      setError(\"Ошибка при удалении товара.\");\n    }\n  };\n  const onAddToCart = useCallback(async item => {\n    try {\n      const existingItem = cartItems.find(cartItem => cartItem.title === item.title);\n      if (existingItem) {\n        // Обновляем количество на сервере\n        const updatedItem = {\n          ...existingItem,\n          quantity: existingItem.quantity + 1\n        };\n        await axios.put(`https://673876654eb22e24fca800c5.mockapi.io/cart/${existingItem.id}`, updatedItem);\n        setCartItems(prevItems => prevItems.map(el => el.id === existingItem.id ? updatedItem : el));\n      } else {\n        // Добавляем новый товар\n        const newItem = {\n          ...item,\n          quantity: 1\n        };\n        const {\n          data\n        } = await axios.post('https://673876654eb22e24fca800c5.mockapi.io/cart', newItem);\n        setCartItems(prevItems => [...prevItems, data]);\n      }\n    } catch (error) {\n      console.error(\"Ошибка при добавлении товара в корзину:\", error);\n    }\n  }, [cartItems]);\n\n  // Функция для удаления товара из корзины\n  const onRemoveItem = async id => {\n    try {\n      // Находим товар по ID\n      const itemToUpdate = cartItems.find(item => item.id === id);\n      if (!itemToUpdate) return;\n      if (itemToUpdate.quantity > 1) {\n        // Если количество больше 1, уменьшаем количество\n        const updatedItem = {\n          ...itemToUpdate,\n          quantity: itemToUpdate.quantity - 1\n        };\n        await axios.put(`https://673876654eb22e24fca800c5.mockapi.io/cart/${id}`, updatedItem);\n\n        // Обновляем локальное состояние\n        setCartItems(prevItems => prevItems.map(item => item.id === id ? updatedItem : item));\n      } else {\n        // Если количество равно 1, удаляем товар полностью\n        await axios.delete(`https://673876654eb22e24fca800c5.mockapi.io/cart/${id}`);\n        setCartItems(prevItems => prevItems.filter(item => item.id !== id));\n      }\n    } catch (error) {\n      console.error(\"Ошибка при обновлении количества товара:\", error);\n    }\n  };\n\n  // Функция для проверки, добавлен ли товар в корзину\n  const isItemInCart = title => {\n    return cartItems.some(cartItem => cartItem.title === title);\n  };\n\n  // Состояние для активной категории товаров\n  const [activeCategory, setActiveCategory] = useState('');\n  const value = {\n    items,\n    cartItems,\n    processedItems,\n    addProduct,\n    updateProduct,\n    deleteProduct,\n    onAddToCart,\n    onRemoveItem,\n    isItemInCart,\n    activeCategory,\n    setActiveCategory,\n    loading,\n    error\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: value,\n    children: [loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"\\u0417\\u0430\\u0433\\u0440\\u0443\\u0437\\u043A\\u0430...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 18\n    }, this) : props.children, error && /*#__PURE__*/_jsxDEV(\"p\", {\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n};\n_s(Context, \"l3UMB08QaYhd32Kbtu45KTGFoGQ=\");\n_c = Context;\nexport default Context;\nvar _c;\n$RefreshReg$(_c, \"Context\");","map":{"version":3,"names":["React","useState","createContext","useEffect","useCallback","axios","jsxDEV","_jsxDEV","CartContext","API_URL","Context","props","_s","items","setItems","cartItems","setCartItems","loading","setLoading","error","setError","processedItems","map","item","price","Number","fetchData","itemsResponse","cartResponse","Promise","allSettled","get","status","value","data","err","addProduct","newProduct","post","prev","updateProduct","id","updatedData","put","deleteProduct","delete","filter","onAddToCart","existingItem","find","cartItem","title","updatedItem","quantity","prevItems","el","newItem","console","onRemoveItem","itemToUpdate","isItemInCart","some","activeCategory","setActiveCategory","Provider","children","fileName","_jsxFileName","lineNumber","columnNumber","style","color","_c","$RefreshReg$"],"sources":["C:/Users/lakir/Desktop/lastTry/frontend/src/components/Context.jsx"],"sourcesContent":["import React, { useState, createContext, useEffect, useCallback } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport const CartContext = createContext();\r\n\r\nconst API_URL = \"https://673876654eb22e24fca800c5.mockapi.io\";\r\n\r\nconst Context = (props) => {\r\n  const [items, setItems] = useState([]); // Товары\r\n  const [cartItems, setCartItems] = useState([]); // Корзина\r\n  const [loading, setLoading] = useState(true); // Загрузка данных\r\n  const [error, setError] = useState(null); // Ошибки\r\n\r\n  // Преобразование данных корзины\r\n  const processedItems = cartItems?.map((item) => ({\r\n    ...item,\r\n    price: Number(item.price),\r\n  })) || [];\r\n\r\n  // Загрузка данных из API\r\n  const fetchData = useCallback(async () => {\r\n    setLoading(true);\r\n    setError(null);\r\n    try {\r\n      const [itemsResponse, cartResponse] = await Promise.allSettled([\r\n        axios.get(`${API_URL}/items`),\r\n        axios.get(`${API_URL}/cart`),\r\n      ]);\r\n\r\n      if (itemsResponse.status === \"fulfilled\") setItems(itemsResponse.value.data);\r\n      if (cartResponse.status === \"fulfilled\") setCartItems(cartResponse.value.data);\r\n    } catch (err) {\r\n      setError(\"Ошибка при загрузке данных!\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    fetchData();\r\n  }, [fetchData]);\r\n\r\n  // Добавление товара\r\n  const addProduct = async (newProduct) => {\r\n    try {\r\n      const { data } = await axios.post(`${API_URL}/items`, newProduct);\r\n      setItems((prev) => [...prev, data]);\r\n    } catch (error) {\r\n      setError(\"Ошибка при добавлении товара.\");\r\n    }\r\n  };\r\n\r\n  // Обновление товара\r\n  const updateProduct = async (id, updatedData) => {\r\n    try {\r\n      const { data } = await axios.put(`${API_URL}/items/${id}`, updatedData);\r\n      setItems((prev) =>\r\n        prev.map((item) => (item.id === id ? { ...item, ...data } : item))\r\n      );\r\n    } catch (error) {\r\n      setError(\"Ошибка при обновлении товара.\");\r\n    }\r\n  };\r\n\r\n  // Удаление товара\r\n  const deleteProduct = async (id) => {\r\n    try {\r\n      await axios.delete(`${API_URL}/items/${id}`);\r\n      setItems((prev) => prev.filter((item) => item.id !== id));\r\n    } catch (error) {\r\n      setError(\"Ошибка при удалении товара.\");\r\n    }\r\n  };\r\n\r\n  const onAddToCart = useCallback(async (item) => {\r\n    try {\r\n      const existingItem = cartItems.find((cartItem) => cartItem.title === item.title);\r\n  \r\n      if (existingItem) {\r\n        // Обновляем количество на сервере\r\n        const updatedItem = { ...existingItem, quantity: existingItem.quantity + 1 };\r\n        await axios.put(`https://673876654eb22e24fca800c5.mockapi.io/cart/${existingItem.id}`, updatedItem);\r\n        setCartItems((prevItems) =>\r\n          prevItems.map((el) => (el.id === existingItem.id ? updatedItem : el))\r\n        );\r\n      } else {\r\n        // Добавляем новый товар\r\n        const newItem = { ...item, quantity: 1 };\r\n        const { data } = await axios.post('https://673876654eb22e24fca800c5.mockapi.io/cart', newItem);\r\n        setCartItems((prevItems) => [...prevItems, data]);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Ошибка при добавлении товара в корзину:\", error);\r\n    }\r\n  }, [cartItems]);\r\n\r\n  // Функция для удаления товара из корзины\r\n  const onRemoveItem = async (id) => {\r\n    try {\r\n      // Находим товар по ID\r\n      const itemToUpdate = cartItems.find((item) => item.id === id);\r\n  \r\n      if (!itemToUpdate) return;\r\n  \r\n      if (itemToUpdate.quantity > 1) {\r\n        // Если количество больше 1, уменьшаем количество\r\n        const updatedItem = { ...itemToUpdate, quantity: itemToUpdate.quantity - 1 };\r\n        await axios.put(`https://673876654eb22e24fca800c5.mockapi.io/cart/${id}`, updatedItem);\r\n  \r\n        // Обновляем локальное состояние\r\n        setCartItems((prevItems) =>\r\n          prevItems.map((item) => (item.id === id ? updatedItem : item))\r\n        );\r\n      } else {\r\n        // Если количество равно 1, удаляем товар полностью\r\n        await axios.delete(`https://673876654eb22e24fca800c5.mockapi.io/cart/${id}`);\r\n        setCartItems((prevItems) => prevItems.filter((item) => item.id !== id));\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Ошибка при обновлении количества товара:\", error);\r\n    }\r\n  };\r\n\r\n  // Функция для проверки, добавлен ли товар в корзину\r\n  const isItemInCart = (title) => {\r\n    return cartItems.some((cartItem) => cartItem.title === title);\r\n  };\r\n\r\n  // Состояние для активной категории товаров\r\n  const [activeCategory, setActiveCategory] = useState('');\r\n\r\n  const value = {\r\n    items,\r\n    cartItems,\r\n    processedItems,\r\n    addProduct,\r\n    updateProduct,\r\n    deleteProduct,\r\n    onAddToCart,\r\n    onRemoveItem,\r\n    isItemInCart,\r\n    activeCategory,\r\n    setActiveCategory,\r\n    loading,\r\n    error,\r\n  };\r\n\r\n  return (\r\n    <CartContext.Provider value={value}>\r\n      {loading ? <p>Загрузка...</p> : props.children}\r\n      {error && <p style={{ color: \"red\" }}>{error}</p>}\r\n    </CartContext.Provider>\r\n  );\r\n};\r\n\r\nexport default Context;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,aAAa,EAAEC,SAAS,EAAEC,WAAW,QAAQ,OAAO;AAC9E,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,OAAO,MAAMC,WAAW,gBAAGN,aAAa,CAAC,CAAC;AAE1C,MAAMO,OAAO,GAAG,6CAA6C;AAE7D,MAAMC,OAAO,GAAIC,KAAK,IAAK;EAAAC,EAAA;EACzB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGb,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EACxC,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGf,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;EAChD,MAAM,CAACgB,OAAO,EAAEC,UAAU,CAAC,GAAGjB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;EAC9C,MAAM,CAACkB,KAAK,EAAEC,QAAQ,CAAC,GAAGnB,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;;EAE1C;EACA,MAAMoB,cAAc,GAAG,CAAAN,SAAS,aAATA,SAAS,uBAATA,SAAS,CAAEO,GAAG,CAAEC,IAAI,KAAM;IAC/C,GAAGA,IAAI;IACPC,KAAK,EAAEC,MAAM,CAACF,IAAI,CAACC,KAAK;EAC1B,CAAC,CAAC,CAAC,KAAI,EAAE;;EAET;EACA,MAAME,SAAS,GAAGtB,WAAW,CAAC,YAAY;IACxCc,UAAU,CAAC,IAAI,CAAC;IAChBE,QAAQ,CAAC,IAAI,CAAC;IACd,IAAI;MACF,MAAM,CAACO,aAAa,EAAEC,YAAY,CAAC,GAAG,MAAMC,OAAO,CAACC,UAAU,CAAC,CAC7DzB,KAAK,CAAC0B,GAAG,CAAC,GAAGtB,OAAO,QAAQ,CAAC,EAC7BJ,KAAK,CAAC0B,GAAG,CAAC,GAAGtB,OAAO,OAAO,CAAC,CAC7B,CAAC;MAEF,IAAIkB,aAAa,CAACK,MAAM,KAAK,WAAW,EAAElB,QAAQ,CAACa,aAAa,CAACM,KAAK,CAACC,IAAI,CAAC;MAC5E,IAAIN,YAAY,CAACI,MAAM,KAAK,WAAW,EAAEhB,YAAY,CAACY,YAAY,CAACK,KAAK,CAACC,IAAI,CAAC;IAChF,CAAC,CAAC,OAAOC,GAAG,EAAE;MACZf,QAAQ,CAAC,6BAA6B,CAAC;IACzC,CAAC,SAAS;MACRF,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC,EAAE,EAAE,CAAC;EAENf,SAAS,CAAC,MAAM;IACduB,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACA,SAAS,CAAC,CAAC;;EAEf;EACA,MAAMU,UAAU,GAAG,MAAOC,UAAU,IAAK;IACvC,IAAI;MACF,MAAM;QAAEH;MAAK,CAAC,GAAG,MAAM7B,KAAK,CAACiC,IAAI,CAAC,GAAG7B,OAAO,QAAQ,EAAE4B,UAAU,CAAC;MACjEvB,QAAQ,CAAEyB,IAAI,IAAK,CAAC,GAAGA,IAAI,EAAEL,IAAI,CAAC,CAAC;IACrC,CAAC,CAAC,OAAOf,KAAK,EAAE;MACdC,QAAQ,CAAC,+BAA+B,CAAC;IAC3C;EACF,CAAC;;EAED;EACA,MAAMoB,aAAa,GAAG,MAAAA,CAAOC,EAAE,EAAEC,WAAW,KAAK;IAC/C,IAAI;MACF,MAAM;QAAER;MAAK,CAAC,GAAG,MAAM7B,KAAK,CAACsC,GAAG,CAAC,GAAGlC,OAAO,UAAUgC,EAAE,EAAE,EAAEC,WAAW,CAAC;MACvE5B,QAAQ,CAAEyB,IAAI,IACZA,IAAI,CAACjB,GAAG,CAAEC,IAAI,IAAMA,IAAI,CAACkB,EAAE,KAAKA,EAAE,GAAG;QAAE,GAAGlB,IAAI;QAAE,GAAGW;MAAK,CAAC,GAAGX,IAAK,CACnE,CAAC;IACH,CAAC,CAAC,OAAOJ,KAAK,EAAE;MACdC,QAAQ,CAAC,+BAA+B,CAAC;IAC3C;EACF,CAAC;;EAED;EACA,MAAMwB,aAAa,GAAG,MAAOH,EAAE,IAAK;IAClC,IAAI;MACF,MAAMpC,KAAK,CAACwC,MAAM,CAAC,GAAGpC,OAAO,UAAUgC,EAAE,EAAE,CAAC;MAC5C3B,QAAQ,CAAEyB,IAAI,IAAKA,IAAI,CAACO,MAAM,CAAEvB,IAAI,IAAKA,IAAI,CAACkB,EAAE,KAAKA,EAAE,CAAC,CAAC;IAC3D,CAAC,CAAC,OAAOtB,KAAK,EAAE;MACdC,QAAQ,CAAC,6BAA6B,CAAC;IACzC;EACF,CAAC;EAED,MAAM2B,WAAW,GAAG3C,WAAW,CAAC,MAAOmB,IAAI,IAAK;IAC9C,IAAI;MACF,MAAMyB,YAAY,GAAGjC,SAAS,CAACkC,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACC,KAAK,KAAK5B,IAAI,CAAC4B,KAAK,CAAC;MAEhF,IAAIH,YAAY,EAAE;QAChB;QACA,MAAMI,WAAW,GAAG;UAAE,GAAGJ,YAAY;UAAEK,QAAQ,EAAEL,YAAY,CAACK,QAAQ,GAAG;QAAE,CAAC;QAC5E,MAAMhD,KAAK,CAACsC,GAAG,CAAC,oDAAoDK,YAAY,CAACP,EAAE,EAAE,EAAEW,WAAW,CAAC;QACnGpC,YAAY,CAAEsC,SAAS,IACrBA,SAAS,CAAChC,GAAG,CAAEiC,EAAE,IAAMA,EAAE,CAACd,EAAE,KAAKO,YAAY,CAACP,EAAE,GAAGW,WAAW,GAAGG,EAAG,CACtE,CAAC;MACH,CAAC,MAAM;QACL;QACA,MAAMC,OAAO,GAAG;UAAE,GAAGjC,IAAI;UAAE8B,QAAQ,EAAE;QAAE,CAAC;QACxC,MAAM;UAAEnB;QAAK,CAAC,GAAG,MAAM7B,KAAK,CAACiC,IAAI,CAAC,kDAAkD,EAAEkB,OAAO,CAAC;QAC9FxC,YAAY,CAAEsC,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAEpB,IAAI,CAAC,CAAC;MACnD;IACF,CAAC,CAAC,OAAOf,KAAK,EAAE;MACdsC,OAAO,CAACtC,KAAK,CAAC,yCAAyC,EAAEA,KAAK,CAAC;IACjE;EACF,CAAC,EAAE,CAACJ,SAAS,CAAC,CAAC;;EAEf;EACA,MAAM2C,YAAY,GAAG,MAAOjB,EAAE,IAAK;IACjC,IAAI;MACF;MACA,MAAMkB,YAAY,GAAG5C,SAAS,CAACkC,IAAI,CAAE1B,IAAI,IAAKA,IAAI,CAACkB,EAAE,KAAKA,EAAE,CAAC;MAE7D,IAAI,CAACkB,YAAY,EAAE;MAEnB,IAAIA,YAAY,CAACN,QAAQ,GAAG,CAAC,EAAE;QAC7B;QACA,MAAMD,WAAW,GAAG;UAAE,GAAGO,YAAY;UAAEN,QAAQ,EAAEM,YAAY,CAACN,QAAQ,GAAG;QAAE,CAAC;QAC5E,MAAMhD,KAAK,CAACsC,GAAG,CAAC,oDAAoDF,EAAE,EAAE,EAAEW,WAAW,CAAC;;QAEtF;QACApC,YAAY,CAAEsC,SAAS,IACrBA,SAAS,CAAChC,GAAG,CAAEC,IAAI,IAAMA,IAAI,CAACkB,EAAE,KAAKA,EAAE,GAAGW,WAAW,GAAG7B,IAAK,CAC/D,CAAC;MACH,CAAC,MAAM;QACL;QACA,MAAMlB,KAAK,CAACwC,MAAM,CAAC,oDAAoDJ,EAAE,EAAE,CAAC;QAC5EzB,YAAY,CAAEsC,SAAS,IAAKA,SAAS,CAACR,MAAM,CAAEvB,IAAI,IAAKA,IAAI,CAACkB,EAAE,KAAKA,EAAE,CAAC,CAAC;MACzE;IACF,CAAC,CAAC,OAAOtB,KAAK,EAAE;MACdsC,OAAO,CAACtC,KAAK,CAAC,0CAA0C,EAAEA,KAAK,CAAC;IAClE;EACF,CAAC;;EAED;EACA,MAAMyC,YAAY,GAAIT,KAAK,IAAK;IAC9B,OAAOpC,SAAS,CAAC8C,IAAI,CAAEX,QAAQ,IAAKA,QAAQ,CAACC,KAAK,KAAKA,KAAK,CAAC;EAC/D,CAAC;;EAED;EACA,MAAM,CAACW,cAAc,EAAEC,iBAAiB,CAAC,GAAG9D,QAAQ,CAAC,EAAE,CAAC;EAExD,MAAMgC,KAAK,GAAG;IACZpB,KAAK;IACLE,SAAS;IACTM,cAAc;IACde,UAAU;IACVI,aAAa;IACbI,aAAa;IACbG,WAAW;IACXW,YAAY;IACZE,YAAY;IACZE,cAAc;IACdC,iBAAiB;IACjB9C,OAAO;IACPE;EACF,CAAC;EAED,oBACEZ,OAAA,CAACC,WAAW,CAACwD,QAAQ;IAAC/B,KAAK,EAAEA,KAAM;IAAAgC,QAAA,GAChChD,OAAO,gBAAGV,OAAA;MAAA0D,QAAA,EAAG;IAAW;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,GAAG1D,KAAK,CAACsD,QAAQ,EAC7C9C,KAAK,iBAAIZ,OAAA;MAAG+D,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAM,CAAE;MAAAN,QAAA,EAAE9C;IAAK;MAAA+C,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAC7B,CAAC;AAE3B,CAAC;AAACzD,EAAA,CAlJIF,OAAO;AAAA8D,EAAA,GAAP9D,OAAO;AAoJb,eAAeA,OAAO;AAAC,IAAA8D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}