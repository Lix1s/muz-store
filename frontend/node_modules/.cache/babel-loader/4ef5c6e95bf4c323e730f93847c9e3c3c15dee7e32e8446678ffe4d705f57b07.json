{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"../../axios\";\nexport const fetchAuth = createAsyncThunk('auth/fetchUserData', async params => {\n  const {\n    data\n  } = await axios.post('/auth/login', params);\n  return data;\n});\nconst initialState = {\n  data: null,\n  status: 'loading'\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout: state => {\n      state.data = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchAuth.pending, state => {\n      state.status = 'loading';\n      state.data = null;\n    }).addCase(fetchAuth.fulfilled, (state, action) => {\n      state.status = 'loaded';\n      state.data = action.payload;\n    }).addCase(fetchAuth.rejected, state => {\n      state.status = 'error';\n      state.data = null;\n    });\n  }\n});\nexport const selectIsAuth = state => Boolean(state.auth.data);\nexport const authReducer = authSlice.reducer;\nexport const {\n  logout\n} = authSlice.actions;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","fetchAuth","params","data","post","initialState","status","authSlice","name","reducers","logout","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","selectIsAuth","Boolean","auth","authReducer","reducer","actions"],"sources":["C:/Users/lakir/Desktop/lastTry/frontend/src/redux/slices/auth.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"../../axios\";\r\n\r\nexport const fetchAuth = createAsyncThunk('auth/fetchUserData', async (params) => {\r\n    const { data } = await axios.post('/auth/login', params);\r\n    return data;\r\n});\r\n\r\nconst initialState = {\r\n    data: null,\r\n    status: 'loading',\r\n\r\n};\r\n\r\nconst authSlice = createSlice({\r\n    name:'auth',\r\n    initialState,\r\n    reducers: {\r\n        logout: (state) => {\r\n            state.data = null;\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n        .addCase(fetchAuth.pending, (state) => {\r\n            state.status = 'loading';\r\n            state.data = null;\r\n        })\r\n        .addCase(fetchAuth.fulfilled, (state, action) => {\r\n            state.status = 'loaded';\r\n            state.data = action.payload;\r\n        })\r\n        .addCase(fetchAuth.rejected, (state) => {\r\n            state.status = 'error';\r\n            state.data = null;\r\n        })\r\n       \r\n    },\r\n})\r\n\r\nexport const selectIsAuth = (state) => Boolean(state.auth.data);\r\n\r\nexport const authReducer = authSlice.reducer;\r\n\r\nexport const { logout } = authSlice.actions;"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,aAAa;AAE/B,OAAO,MAAMC,SAAS,GAAGH,gBAAgB,CAAC,oBAAoB,EAAE,MAAOI,MAAM,IAAK;EAC9E,MAAM;IAAEC;EAAK,CAAC,GAAG,MAAMH,KAAK,CAACI,IAAI,CAAC,aAAa,EAAEF,MAAM,CAAC;EACxD,OAAOC,IAAI;AACf,CAAC,CAAC;AAEF,MAAME,YAAY,GAAG;EACjBF,IAAI,EAAE,IAAI;EACVG,MAAM,EAAE;AAEZ,CAAC;AAED,MAAMC,SAAS,GAAGR,WAAW,CAAC;EAC1BS,IAAI,EAAC,MAAM;EACXH,YAAY;EACZI,QAAQ,EAAE;IACNC,MAAM,EAAGC,KAAK,IAAK;MACfA,KAAK,CAACR,IAAI,GAAG,IAAI;IACrB;EACJ,CAAC;EACDS,aAAa,EAAGC,OAAO,IAAK;IACxBA,OAAO,CACNC,OAAO,CAACb,SAAS,CAACc,OAAO,EAAGJ,KAAK,IAAK;MACnCA,KAAK,CAACL,MAAM,GAAG,SAAS;MACxBK,KAAK,CAACR,IAAI,GAAG,IAAI;IACrB,CAAC,CAAC,CACDW,OAAO,CAACb,SAAS,CAACe,SAAS,EAAE,CAACL,KAAK,EAAEM,MAAM,KAAK;MAC7CN,KAAK,CAACL,MAAM,GAAG,QAAQ;MACvBK,KAAK,CAACR,IAAI,GAAGc,MAAM,CAACC,OAAO;IAC/B,CAAC,CAAC,CACDJ,OAAO,CAACb,SAAS,CAACkB,QAAQ,EAAGR,KAAK,IAAK;MACpCA,KAAK,CAACL,MAAM,GAAG,OAAO;MACtBK,KAAK,CAACR,IAAI,GAAG,IAAI;IACrB,CAAC,CAAC;EAEN;AACJ,CAAC,CAAC;AAEF,OAAO,MAAMiB,YAAY,GAAIT,KAAK,IAAKU,OAAO,CAACV,KAAK,CAACW,IAAI,CAACnB,IAAI,CAAC;AAE/D,OAAO,MAAMoB,WAAW,GAAGhB,SAAS,CAACiB,OAAO;AAE5C,OAAO,MAAM;EAAEd;AAAO,CAAC,GAAGH,SAAS,CAACkB,OAAO","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}