{"ast":null,"code":"var _s = $RefreshSig$();\nimport { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"../../axios\";\nimport { useEffect, useState } from 'react';\nexport const fetchAuth = createAsyncThunk('auth/fetchAuth', async params => {\n  const {\n    data\n  } = await axios.post('/auth/login', params);\n  return data;\n});\nexport const fetchRegister = createAsyncThunk('auth/fetchRegister', async params => {\n  const {\n    data\n  } = await axios.post('/auth/register', params);\n  return data;\n});\nexport const fetchAuthMe = createAsyncThunk('auth/fetchAuthMe', async () => {\n  const {\n    data\n  } = await axios.get('/auth/me');\n  return data;\n});\nconst UserButton = () => {\n  _s();\n  const [username, setUsername] = useState('');\n  useEffect(() => {\n    // Асинхронная функция для запроса данных пользователя\n    const fetchUserData = async () => {\n      try {\n        const response = await axios.get('/api/user/me'); // Путь к вашему эндпоинту\n        setUsername(response.data.username); // Сохраняем имя пользователя в состоянии\n      } catch (error) {\n        console.error('Ошибка при получении данных пользователя:', error);\n      }\n    };\n    fetchUserData();\n  }, []);\n};\n_s(UserButton, \"vvPqiwmcocEAjsjiwnE6bJ+J4Yk=\");\n_c = UserButton;\nconst initialState = {\n  data: null,\n  status: 'loading'\n};\nconst authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logout: state => {\n      state.data = null;\n    }\n  },\n  extraReducers: builder => {\n    builder.addCase(fetchAuth.pending, state => {\n      state.status = 'loading';\n      state.data = null;\n    }).addCase(fetchAuth.fulfilled, (state, action) => {\n      state.status = 'loaded';\n      state.data = action.payload;\n    }).addCase(fetchAuth.rejected, state => {\n      state.status = 'error';\n      state.data = null;\n    }).addCase(fetchAuthMe.pending, state => {\n      state.status = 'loading';\n      state.data = null;\n    }).addCase(fetchAuthMe.fulfilled, (state, action) => {\n      state.status = 'loaded';\n      state.data = action.payload;\n    }).addCase(fetchAuthMe.rejected, state => {\n      state.status = 'error';\n      state.data = null;\n    }).addCase(fetchRegister.pending, state => {\n      state.status = 'loading';\n      state.data = null;\n    }).addCase(fetchRegister.fulfilled, (state, action) => {\n      state.status = 'loaded';\n      state.data = action.payload;\n    }).addCase(fetchRegister.rejected, state => {\n      state.status = 'error';\n      state.data = null;\n    });\n  }\n});\nexport const selectIsAuth = state => Boolean(state.auth.data);\nexport const authReducer = authSlice.reducer;\nexport const {\n  logout\n} = authSlice.actions;\nvar _c;\n$RefreshReg$(_c, \"UserButton\");","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","useEffect","useState","fetchAuth","params","data","post","fetchRegister","fetchAuthMe","get","UserButton","_s","username","setUsername","fetchUserData","response","error","console","_c","initialState","status","authSlice","name","reducers","logout","state","extraReducers","builder","addCase","pending","fulfilled","action","payload","rejected","selectIsAuth","Boolean","auth","authReducer","reducer","actions","$RefreshReg$"],"sources":["C:/Users/lakir/Desktop/lastTry/frontend/src/redux/slices/auth.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\r\nimport axios from \"../../axios\";\r\nimport { useEffect, useState } from 'react';\r\n\r\nexport const fetchAuth = createAsyncThunk('auth/fetchAuth', async (params) => {\r\n    const { data } = await axios.post('/auth/login', params);\r\n    return data;\r\n});\r\n\r\nexport const fetchRegister = createAsyncThunk('auth/fetchRegister', async (params) => {\r\n    const { data } = await axios.post('/auth/register', params);\r\n    return data;\r\n});\r\nexport const fetchAuthMe = createAsyncThunk('auth/fetchAuthMe', async () => {\r\n    const { data } = await axios.get('/auth/me');\r\n    return data;\r\n});\r\n\r\nconst UserButton = () => {\r\n    const [username, setUsername] = useState('');\r\n\r\n    useEffect(() => {\r\n        // Асинхронная функция для запроса данных пользователя\r\n        const fetchUserData = async () => {\r\n            try {\r\n                const response = await axios.get('/api/user/me'); // Путь к вашему эндпоинту\r\n                setUsername(response.data.username); // Сохраняем имя пользователя в состоянии\r\n            } catch (error) {\r\n                console.error('Ошибка при получении данных пользователя:', error);\r\n            }\r\n        };\r\n\r\n        fetchUserData();\r\n    }, [])};\r\n\r\nconst initialState = {\r\n    data: null,\r\n    status: 'loading',\r\n\r\n};\r\n\r\nconst authSlice = createSlice({\r\n    name:'auth',\r\n    initialState,\r\n    reducers: {\r\n        logout: (state) => {\r\n            state.data = null;\r\n        }\r\n    },\r\n    extraReducers: (builder) => {\r\n        builder\r\n        .addCase(fetchAuth.pending, (state) => {\r\n            state.status = 'loading';\r\n            state.data = null;\r\n        })\r\n        .addCase(fetchAuth.fulfilled, (state, action) => {\r\n            state.status = 'loaded';\r\n            state.data = action.payload;\r\n        })\r\n        .addCase(fetchAuth.rejected, (state) => {\r\n            state.status = 'error';\r\n            state.data = null;\r\n        })\r\n        .addCase(fetchAuthMe.pending, (state) => {\r\n            state.status = 'loading';\r\n            state.data = null;\r\n        })\r\n        .addCase(fetchAuthMe.fulfilled, (state, action) => {\r\n            state.status = 'loaded';\r\n            state.data = action.payload;\r\n        })\r\n        .addCase(fetchAuthMe.rejected, (state) => {\r\n            state.status = 'error';\r\n            state.data = null;\r\n        })\r\n        .addCase(fetchRegister.pending, (state) => {\r\n            state.status = 'loading';\r\n            state.data = null;\r\n        })\r\n        .addCase(fetchRegister.fulfilled, (state, action) => {\r\n            state.status = 'loaded';\r\n            state.data = action.payload;\r\n        })\r\n        .addCase(fetchRegister.rejected, (state) => {\r\n            state.status = 'error';\r\n            state.data = null;\r\n        })\r\n    },\r\n})\r\n\r\nexport const selectIsAuth = (state) => Boolean(state.auth.data);\r\n\r\nexport const authReducer = authSlice.reducer;\r\n\r\nexport const { logout } = authSlice.actions;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}