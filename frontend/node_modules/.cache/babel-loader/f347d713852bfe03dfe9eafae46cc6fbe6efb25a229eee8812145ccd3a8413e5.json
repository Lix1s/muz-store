{"ast":null,"code":"// import React, {useState, createContext} from \"react\";\n// import axios from \"axios\";\n// import { useEffect, useCallback  } from 'react';\n// export const CartContext = createContext();\n\n// const Context = (props) => {\n//     const [cartItems, setCartItems] = React.useState([]);\n\n//     const onAddToCart = useCallback(async (obj) => {\n//       try {\n//          const { data } = await axios.post('https://673876654eb22e24fca800c5.mockapi.io/cart', obj);\n//           setCartItems((prev) => [...prev, data]);\n//       } catch (error) {\n//           console.error(\"Ошибка при добавлении товара:\", error);\n//       }\n//   }, []);\n\n//   // Загрузка данных корзины при монтировании компонента\n//   useEffect(() => {\n//       const fetchData = async () => {\n//           try {\n//               const response = await axios.get('https://673876654eb22e24fca800c5.mockapi.io/cart');\n//               setCartItems(response.data);\n//           } catch (error) {\n//               console.error(\"Ошибка при загрузке данных:\", error);\n//           }\n//       };\n\n//       fetchData();\n//   }, []); // Выполняется только при монтировании компонента\n\n//     const onRemoveItem = (id) => {\n\n//       axios.delete(`https://673876654eb22e24fca800c5.mockapi.io/cart/${id}`);\n//       setCartItems((prev) => prev.filter(item => item.id !== id));\n//     }\n\n//   const value = {\n//     cartItems,\n//     setCartItems,\n//     onAddToCart,\n//     onRemoveItem,\n//   }\n//     return (\n//       <CartContext.Provider value={value}>\n//         {props.children}\n//       </CartContext.Provider>\n\n//     );\n// }\n// export default Context;","map":{"version":3,"names":[],"sources":["C:/Users/lakir/Desktop/lastTry/frontend/src/components/Context.jsx"],"sourcesContent":["// import React, {useState, createContext} from \"react\";\r\n// import axios from \"axios\";\r\n// import { useEffect, useCallback  } from 'react';\r\n// export const CartContext = createContext();\r\n\r\n// const Context = (props) => {\r\n//     const [cartItems, setCartItems] = React.useState([]);\r\n    \r\n//     const onAddToCart = useCallback(async (obj) => {\r\n//       try {\r\n//          const { data } = await axios.post('https://673876654eb22e24fca800c5.mockapi.io/cart', obj);\r\n//           setCartItems((prev) => [...prev, data]);\r\n//       } catch (error) {\r\n//           console.error(\"Ошибка при добавлении товара:\", error);\r\n//       }\r\n//   }, []);\r\n\r\n//   // Загрузка данных корзины при монтировании компонента\r\n//   useEffect(() => {\r\n//       const fetchData = async () => {\r\n//           try {\r\n//               const response = await axios.get('https://673876654eb22e24fca800c5.mockapi.io/cart');\r\n//               setCartItems(response.data);\r\n//           } catch (error) {\r\n//               console.error(\"Ошибка при загрузке данных:\", error);\r\n//           }\r\n//       };\r\n\r\n//       fetchData();\r\n//   }, []); // Выполняется только при монтировании компонента\r\n  \r\n//     const onRemoveItem = (id) => {\r\n      \r\n//       axios.delete(`https://673876654eb22e24fca800c5.mockapi.io/cart/${id}`);\r\n//       setCartItems((prev) => prev.filter(item => item.id !== id));\r\n//     }\r\n\r\n//   const value = {\r\n//     cartItems,\r\n//     setCartItems,\r\n//     onAddToCart,\r\n//     onRemoveItem,\r\n//   }\r\n//     return (\r\n//       <CartContext.Provider value={value}>\r\n//         {props.children}\r\n//       </CartContext.Provider>\r\n        \r\n        \r\n//     );\r\n// }\r\n// export default Context;"],"mappings":"AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA;AACA;AACA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}